name: Go Ci
# もしmainブランチのgo-backendディレクトリ内のファイル、またはこのワークフローファイル自体が変更された場合にトリガーされます。
on:
  push:
    branches: [ main ]
    paths:
      - "go-backend/**"
      - ".github/workflows/go_ci.yaml"
  pull_request:
    branches: [ main ]
    paths:
      - "go-backend/**"
      - ".github/workflows/go_ci.yaml"
  workflow_dispatch:

env:
  DB_HOST: 127.0.0.1
  POSTGRES_USER: app_user
  POSTGRES_PASSWORD: password
  POSTGRES_DB: app_db

jobs:
  build:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./go-backend
    services:
      db:
        image: ankane/pgvector
        env:
          POSTGRES_USER: ${{ env.POSTGRES_USER }}
          POSTGRES_PASSWORD: ${{ env.POSTGRES_PASSWORD }}
          POSTGRES_DB: ${{ env.POSTGRES_DB }}
        ports:
          - 5432:5432
        # サービスが準備完了したことを確認するためのヘルスチェック
        options: >-
          --health-cmd pg_isready
          --health-interval 4s
          --health-timeout 5s
          --health-retries 5
    steps:
      - name: Checkout repository
        uses: actions/checkout@v5
      - name: Set up Go
        uses: actions/setup-go@v6
        with:
          go-version-file: go-backend/go.mod
          cache-dependency-path: |
            go-backend/go.sum

      - name: Install dependencies
        run: |
          go mod download
          go install -tags 'postgres' github.com/golang-migrate/migrate/v4/cmd/migrate@latest

      - name: Migrate database
        run: |
          migrate -path ./db/migration -database "postgres://$POSTGRES_USER:$POSTGRES_PASSWORD@$DB_HOST:5432/$POSTGRES_DB?sslmode=disable" up

      - name: Run tests
        run: |
          go test -tags="integration" ./... -v
