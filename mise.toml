[tools]
go = "latest"
lazygit = "latest"
"npm:@google/gemini-cli" = "latest"
"npm:@typespec/compiler" = "latest"
"go:github.com/golang-migrate/migrate/v4/cmd/migrate" = {version = "latest", tags = "postgres"}
"go:github.com/oapi-codegen/oapi-codegen/v2/cmd/oapi-codegen" = "latest"
"go:github.com/air-verse/air" = "latest"
"go:github.com/sqlc-dev/sqlc/cmd/sqlc" = "latest"

[tasks.dockerComposeUp]
alias = "dcup"
description = "Docker Composeでサービスを起動します`mise run dcup`"
run = "docker compose up --build --watch"

[tasks.run]
description = "すべてのサービスをローカルで起動します"
depends = "run:*"
[tasks."run:backend"]
description = "Goバックエンドを起動します"
dir = "go-backend"
run = [ "go run ./main.go" ]


[tasks.allTest]
description = "すべてのサービスのテストを実行します"
depends = "test:*"
[tasks."test:backend"]
description = "Goバックエンドのテストを実行します"
dir = "go-backend"
run = "go test ./... -v"
[tasks."test:backend-integration"]
description = "Goバックエンドの統合テストを実行します"
dir = "go-backend"
run = "go test -tags=integration ./... -v"


[tasks.genoapi]
description = "TypeSpecからOpenAPI仕様からスタブコードを生成します"
run = [
    "cd spec && tsp compile ./src/main.tsp",
    "cd go-backend && oapi-codegen --config=oapi/oapi_config.yaml ../openapi.1.0.yaml"]
